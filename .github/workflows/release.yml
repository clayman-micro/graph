

name: Release and deploy

on:
  create:
    tags:
      - v*

jobs:
  linters:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@master

      - uses: actions/setup-python@v1
        with:
          python-version: '3.10'
          architecture: 'x64'

      - name: Install requirements
        # Устанавливаем зависимости
        run: pip install poetry tox

      - name: Run flake8
        env:
          TOXENV: flake8
        run: tox

      - name: Run mypy
        env:
          TOXENV: mypy
        run: tox
        continue-on-error: true

      - name: Send notification to Telegram
        if: always()
        uses: appleboy/telegram-action@master
        with:
          to: ${{ secrets.TELEGRAM_CHAT }}
          token: ${{ secrets.TELEGRAM_SECRET }}
          args: ${{ github.repository }} linters for `master` - ${{ job.status }}

  tests:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@master

      - uses: actions/setup-python@v1
        with:
          python-version: '3.10'
          architecture: 'x64'

      - name: Install requirements
        # Устанавливаем зависимости
        run: pip install poetry tox

      # - name: Run tests
      #   env:
      #     TOXENV: tests
      #   run: tox

      # - name: Get coverage report
      #   env:
      #     TOXENV: coverage
      #   run: tox

      - name: Send notification to Telegram
        if: always()
        uses: appleboy/telegram-action@master
        with:
          to: ${{ secrets.TELEGRAM_CHAT }}
          token: ${{ secrets.TELEGRAM_SECRET }}
          args: ${{ github.repository }} tests for `master` - ${{ job.status }}

  build:
    needs: [linter, tests]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@master

      - name: Set output
        id: vars
        run: echo ::set-output name=tag::${GITHUB_REF#refs/*/}

      - name: Import Secrets
        id: secrets
        uses: hashicorp/vault-action@v2.1.0
        with:
          url: ${{ secrets.VAULT_ADDR }}
          method: approle
          roleId: ${{ secrets.VAULT_ROLE_ID }}
          secretId: ${{ secrets.VAULT_SECRET_ID }}
          secrets: |
              credentials/data/services/ghcr user | DOCKER_USERNAME ;
              credentials/data/services/ghcr password | DOCKER_PASSWORD

      - name: Publish to Docker Repository
        uses: elgohr/Publish-Docker-Github-Action@master
        with:
          name: ghcr.io/clayman-micro/graph
          username: ${{ steps.secrets.outputs.DOCKER_USERNAME }}
          password: ${{ steps.secrets.outputs.DOCKER_PASSWORD }}
          registry: ghcr.io
          tag_names: true

  # deploy:
  #   needs: [publish_image]
  #   runs-on: ubuntu-latest
  #   steps:
  #     - uses: actions/checkout@master

  #     - name: Prepare ansible config secrets
  #       env:
  #         SSH_KEY: ${{ secrets.SSH_KEY }}
  #       run: |
  #         mkdir .ssh
  #         echo "$SSH_KEY" > .ssh/id_rsa
  #         chmod 600 .ssh/id_rsa

  #     - name: Set output
  #       id: vars
  #       run: echo ::set-output name=tag::${GITHUB_REF#refs/*/}

  #     - name: Deploy new version
  #       env:
  #         ANSIBLE_HOST_KEY_CHECKING: False
  #         SHORTNER_VERSION: ${{ steps.vars.outputs.tag }}
  #       run: |
  #         ansible-playbook -i ansible/inventory ansible/deploy.yml

  #     - name: Send notification to Telegram
  #       if: always()
  #       uses: appleboy/telegram-action@master
  #       with:
  #         to: ${{ secrets.TELEGRAM_CHAT }}
  #         token: ${{ secrets.TELEGRAM_TOKEN }}
  #         args: ${{ github.repository }} deploy version `${{ steps.vars.outputs.tag }}` - ${{ job.status }}



